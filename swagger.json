{
  "swagger": "2.0",
  "info": {
    "title": "Curated",
    "description": "This is my API for curated my API news from across the Internet. These are stories I've flagged as important after reading blog feeds, Twitter, Reddit, and numerous other sources.",
    "termsOfService": "http://kinlane.com/terms-of-service.html",
    "version": "v1"
  },
  "host": "curated.api.kinlane.com",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "produces": [
    "curatedlication/json"
  ],
  "paths": {
    "curated/": {
      "get": {
        "summary": "retrieves all curated items",
        "description": "pulls all curated items, with filter by keyword",
        "operationId": "getCurateds",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "a text query to search across curated items",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "curated response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/curated"
              }
            }
          }
        },
        "tags": [
          "Curated"
        ]
      },
      "post": {
        "summary": "add curated",
        "description": "add a new curated",
        "operationId": "addCurated",
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "description": "title of the curated item",
            "required": true,
            "type": "string"
          },
          {
            "name": "link",
            "in": "query",
            "description": "url for the curated item",
            "required": true,
            "type": "string"
          },
          {
            "name": "item_date",
            "in": "query",
            "description": "date applied to the curated item",
            "required": true,
            "type": "string"
          },
          {
            "name": "details",
            "in": "query",
            "description": "raw details of the curated item",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status of the curated item",
            "required": true,
            "type": "string"
          },
          {
            "name": "public_comment",
            "in": "query",
            "description": "public comment on the curated item",
            "required": true,
            "type": "string"
          },
          {
            "name": "original_date",
            "in": "query",
            "description": "original date of the curated item",
            "required": true,
            "type": "string"
          },
          {
            "name": "author",
            "in": "query",
            "description": "author of the curated item",
            "required": true,
            "type": "string"
          },
          {
            "name": "processed",
            "in": "query",
            "description": "has the curated item been processed",
            "required": true,
            "type": "string"
          },
          {
            "name": "domain",
            "in": "query",
            "description": "domain of the curated item",
            "required": true,
            "type": "string"
          },
          {
            "name": "screenshot_url",
            "in": "query",
            "description": "screenshot url for the curated item",
            "required": true,
            "type": "string"
          },
          {
            "name": "resolved_url",
            "in": "query",
            "description": "resolved url for the item",
            "required": true,
            "type": "string"
          },
          {
            "name": "weekly_summary",
            "in": "query",
            "description": "is curated item included in weekly summary",
            "required": true,
            "type": "string"
          },
          {
            "name": "weekly_roundup",
            "in": "query",
            "description": "is curated included in weekly roundup",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "curated response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/curated"
              }
            }
          }
        },
        "tags": [
          "Curated"
        ]
      }
    },
    "curated/{curated_id}": {
      "get": {
        "summary": "Retrieve a curated item",
        "description": "Returns the curated item usig its id",
        "operationId": "getCurated",
        "parameters": [
          {
            "name": "curated_id",
            "in": "path",
            "description": "id for the curated id",
            "required": "true",
            "type": "integer",
            "format": "id"
          }
        ],
        "responses": {
          "200": {
            "description": "curated response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/curated"
              }
            }
          }
        },
        "tags": [
          "Curated"
        ]
      },
      "put": {
        "summary": "Updated Curated Item",
        "description": "Updated Curated Item",
        "operationId": "updateCurated",
        "parameters": [
          {
            "name": "curated_id",
            "in": "path",
            "description": "id of the curated item",
            "required": true,
            "type": "integer"
          },
          {
            "name": "title",
            "in": "query",
            "description": "title of the curated item",
            "required": true,
            "type": "string"
          },
          {
            "name": "link",
            "in": "query",
            "description": "url for the curated item",
            "required": true,
            "type": "string"
          },
          {
            "name": "item_date",
            "in": "query",
            "description": "date applied to the curated item",
            "required": true,
            "type": "string"
          },
          {
            "name": "details",
            "in": "query",
            "description": "raw details of the curated item",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status of the curated item",
            "required": true,
            "type": "string"
          },
          {
            "name": "public_comment",
            "in": "query",
            "description": "public comment on the curated item",
            "required": true,
            "type": "string"
          },
          {
            "name": "original_date",
            "in": "query",
            "description": "original date of the curated item",
            "required": true,
            "type": "string"
          },
          {
            "name": "author",
            "in": "query",
            "description": "author of the curated item",
            "required": true,
            "type": "string"
          },
          {
            "name": "processed",
            "in": "query",
            "description": "has the curated item been processed",
            "required": true,
            "type": "string"
          },
          {
            "name": "domain",
            "in": "query",
            "description": "domain of the curated item",
            "required": true,
            "type": "string"
          },
          {
            "name": "screenshot_url",
            "in": "query",
            "description": "screenshot url for the curated item",
            "required": true,
            "type": "string"
          },
          {
            "name": "resolved_url",
            "in": "query",
            "description": "resolved url for the item",
            "required": true,
            "type": "string"
          },
          {
            "name": "weekly_summary",
            "in": "query",
            "description": "is curated item included in weekly summary",
            "required": true,
            "type": "string"
          },
          {
            "name": "weekly_roundup",
            "in": "query",
            "description": "is curated included in weekly roundup",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "curated response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/curated"
              }
            }
          }
        },
        "tags": [
          "Curated"
        ]
      },
      "delete": {
        "summary": "delete a curated item",
        "description": "deletes an curated",
        "operationId": "deleteCurated",
        "parameters": [
          {
            "name": "curated_id",
            "in": "path",
            "description": "id for the curated item",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "curated response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/curated"
              }
            }
          }
        },
        "tags": [
          "Curated"
        ]
      }
    },
    "curated/{curated_id}/tags/": {
      "get": {
        "summary": "Curated Tags",
        "description": "Returns the tags for a curated item",
        "operationId": "getCuratedTags",
        "parameters": [
          {
            "name": "curated_id",
            "in": "path",
            "description": "id for curated item",
            "required": "true",
            "type": "integer",
            "format": "id"
          }
        ],
        "responses": {
          "200": {
            "description": "curated tags response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/tag"
              }
            }
          }
        },
        "tags": [
          "Tags"
        ]
      },
      "post": {
        "summary": "add tag",
        "description": "add tag to curated item",
        "operationId": "addCuratedTag",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "description": "tag name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "curated response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/tag"
              }
            }
          }
        },
        "tags": [
          "Tags"
        ]
      }
    },
    "curated/{curated_id}/tags/{tag}": {
      "delete": {
        "summary": "delete a curated item",
        "description": "deletes an curated",
        "operationId": "deleteCurated",
        "parameters": [
          {
            "name": "curated_id",
            "in": "path",
            "description": "id for the curated item",
            "required": true,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "path",
            "description": "tag to upate on the curated item",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "curated response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/tag"
              }
            }
          }
        },
        "tags": [
          "Tags"
        ]
      }
    },
    "curated/{curated_id}/notes/": {
      "get": {
        "summary": "Retrieve curated notes",
        "description": "Returns the notes for a curated item",
        "operationId": "getCuratedNotes",
        "parameters": [
          {
            "name": "curated_id",
            "in": "path",
            "description": "id for the curated item",
            "required": "true",
            "type": "integer",
            "format": "id"
          }
        ],
        "responses": {
          "200": {
            "description": "curated notes response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/note"
              }
            }
          }
        },
        "tags": [
          "Notes"
        ]
      },
      "post": {
        "summary": "Add Curated Note",
        "description": "Add a note for the curated item",
        "operationId": "addCuratedNote",
        "parameters": [
          {
            "name": "curated_id",
            "in": "path",
            "description": "id for the curated item",
            "required": "true",
            "type": "integer",
            "format": "id"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type of the note",
            "required": true,
            "type": "string"
          },
          {
            "name": "note",
            "in": "query",
            "description": "the full text of note",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "curated note response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/note"
              }
            }
          }
        },
        "tags": [
          "Notes"
        ]
      }
    },
    "curated/{curated_id}/notes/{note_id}": {
      "delete": {
        "summary": "Delete Curated Note",
        "description": "Deletes a note for a curated item",
        "operationId": "deleteCuratedNot",
        "parameters": [
          {
            "name": "curated_id",
            "in": "path",
            "description": "id for the curated item",
            "required": true,
            "type": "string"
          },
          {
            "name": "note_id",
            "in": "path",
            "description": "id for the note",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "curated note response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/note"
              }
            }
          }
        },
        "tags": [
          "Notes"
        ]
      }
    },
    "curated/byweek/": {
      "get": {
        "summary": "curated by week",
        "description": "pulls all curated items by the week",
        "operationId": "getCuratedByWeek",
        "parameters": [
          {
            "name": "week",
            "in": "query",
            "description": "the week number",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "curated by week reponse",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/curated"
              }
            }
          }
        },
        "tags": [
          "Curated By Week"
        ]
      }
    },
    "curated/byweek/review/": {
      "get": {
        "summary": "Curated By Week Review",
        "description": "Pulls all curated items by the week marked for review",
        "operationId": "getCuratedByWeekReview",
        "parameters": [
          {
            "name": "week",
            "in": "query",
            "description": "the week number",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Curated By Week Review Response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/curated"
              }
            }
          }
        },
        "tags": [
          "Curated By Week"
        ]
      }
    },
    "curated/byweek/published/": {
      "get": {
        "summary": "Curated By Week Review",
        "description": "Pulls all curated items by the week marked for review",
        "operationId": "getCuratedByWeekPublished",
        "parameters": [
          {
            "name": "week",
            "in": "query",
            "description": "the week number",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Curated By Week Published Response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/curated"
              }
            }
          }
        },
        "tags": [
          "Curated By Week"
        ]
      }
    },
    "curated/byweek/archive/": {
      "get": {
        "summary": "Curated By Week Archive",
        "description": "Pulls all curated items by the week marked for archive",
        "operationId": "getCuratedByWeekPublished",
        "parameters": [
          {
            "name": "week",
            "in": "query",
            "description": "the week number",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Curated By Week Archive Response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/curated"
              }
            }
          }
        },
        "tags": [
          "Curated By Week"
        ]
      }
    },
    "curated/tags/": {
      "get": {
        "summary": "retrieves all curated items",
        "description": "pulls all curated items, with filter by keyword",
        "operationId": "getCurateds",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "a text query to search across curated items",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "curated response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/curated"
              }
            }
          }
        },
        "tags": [
          "Tags"
        ]
      }
    },
    "curated/tags/{tag}": {
      "delete": {
        "summary": "Delete Tag",
        "description": "Deletes an entire tag from all curated items",
        "operationId": "deleteCuratedTag",
        "parameters": [
          {
            "name": "tag",
            "in": "path",
            "description": "Tag to be removed",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Curated Tag Response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/curated"
              }
            }
          }
        },
        "tags": [
          "Tags"
        ]
      }
    },
    "curated/tags/byweek/": {
      "get": {
        "summary": "Retrieve Curated Tags By Week",
        "description": "Retrieves a list of tags used across curated items by the week.",
        "operationId": "getCurateds",
        "parameters": [
          {
            "name": "week",
            "in": "query",
            "description": "the week to retrieve tags by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Curated Tag Response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/curated"
              }
            }
          }
        },
        "tags": [
          "Tags"
        ]
      }
    },
    "curated/tags/byweek/{tag}/curated/": {
      "get": {
        "summary": "Retrieve Curated Items By Tag and Week",
        "description": "Pulls a list of curated items by week, and tag.",
        "operationId": "getCuratedTagCurated",
        "parameters": [
          {
            "name": "tag",
            "in": "path",
            "description": "the tag to filter by",
            "required": true,
            "type": "string"
          },
          {
            "name": "week",
            "in": "query",
            "description": "the week to filter by, defaults to this week",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Curated Tag Curated Responsee",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/curated"
              }
            }
          }
        },
        "tags": [
          "Tags"
        ]
      }
    }
  },
  "definitions": {
    "curated": {
      "properties": {
        "curated_id": {
          "description": "id for the curated item",
          "type": "string",
          "format": "label"
        },
        "title": {
          "description": "title of the curated item",
          "type": "string"
        },
        "link": {
          "description": "url for the curated item",
          "type": "string"
        },
        "item_date": {
          "description": "date applied to the curated item",
          "type": "string"
        },
        "details": {
          "description": "raw details for the curated item",
          "type": "string",
          "format": "id"
        },
        "status": {
          "description": "status of the curated item",
          "type": "string",
          "format": "id"
        },
        "public_comment": {
          "description": "any public comment for the curated item",
          "type": "string",
          "format": "id"
        },
        "original_date": {
          "description": "orignal date for the curated item",
          "type": "date",
          "format": "datetime"
        },
        "author": {
          "description": "author for the curated item",
          "type": "string",
          "format": "id"
        },
        "processed": {
          "description": "has the curated item been processed",
          "type": "string",
          "format": "id"
        },
        "domain": {
          "description": "root domain for the curated item",
          "type": "string",
          "format": "id"
        },
        "screenshot_url": {
          "description": "screenshot url for the curated item",
          "type": "string",
          "format": "id"
        },
        "resolved_url": {
          "description": "resolved url for the curated item",
          "type": "string",
          "format": "id"
        },
        "weekly_summary": {
          "description": "include in weekly summary",
          "type": "string",
          "format": "id"
        },
        "weekly_roundup": {
          "description": "include in weekly roundup",
          "type": "string",
          "format": "id"
        }
      }
    },
    "tag": {
      "properties": {
        "tag_id": {
          "description": "id for the tag",
          "type": "integer",
          "format": "id"
        },
        "tag": {
          "description": "text tag",
          "type": "string"
        },
        "curated_count": {
          "description": "number of items curated with tag",
          "type": "integer"
        }
      }
    },
    "note": {
      "properties": {
        "note_id": {
          "description": "id for the curated item",
          "type": "integer",
          "format": "id"
        },
        "type": {
          "description": "type of note",
          "type": "string"
        },
        "note": {
          "description": "text of note",
          "type": "string"
        }
      }
    },
    "errorModel": {
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}