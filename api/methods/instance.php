<?php$route = '/curated/';$app->get($route, function ()  use ($app){	$ReturnObject = array();	if(isset($_REQUEST['query'])){ $query = $_REQUEST['query']; } else { $query = '';}				if($query!='')		{		$Query = "SELECT * FROM curated WHERE Title LIKE '%" . $query . "%' OR Details LIKE '%" . $query . "%'";		}	else 		{
		$Query = "SELECT * FROM curated";		
		}			$Query .= " ORDER BY Item_Date DESC, Title ASC";		$Query .= " LIMIT 250";	//echo $Query . "<br />";		$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$Curated_ID = $Database['Curated_ID'];		$title = $Database['Title'];		$title = str_replace(chr(34),"",$title);		$Link = $Database['Link'];		$Item_Date = $Database['Item_Date'];		$Original_Date = $Database['Original_Date'];		$Details = $Database['Details'];		$pattern = '/[^\w ]+/';		$replacement = '';		$Details = preg_replace($pattern, $replacement, $Details);				$Status = $Database['Status'];		$Public_Comment = $Database['Public_Comment'];			$Author = $Database['Author'];				$Domain = $Database['Domain'];		$Screenshot_URL = $Database['Screenshot_URL'];		$Resolved_URL = $Database['Resolved_URL'];		$Weekly_Summary = $Database['Weekly_Summary'];		$Weekly_Roundup = $Database['Weekly_Roundup'];		$Processed = $Database['Processed'];		$Github_Build = $Database['Github_Build'];						// manipulation zone				$F = array();		$F['curated_id'] = $Curated_ID;		$F['title'] = $title;		$F['link'] = $Link;		$F['item_date'] = $Item_Date;		$F['original_date'] = $Original_Date;		//$F['details'] = $Details;		$F['status'] = $Status;		$F['public_comment'] = $Public_Comment;		$F['author'] = $Author;		$F['domain'] = $Domain;		$F['screenshot_url'] = $Screenshot_URL;		$F['resolved_url'] = $Resolved_URL;		$F['weekly_summary'] = $Weekly_Summary;		$F['weekly_roundup'] = $Weekly_Roundup;		$F['processed'] = $Processed;		$F['github_build'] = $Github_Build;				$F['tags'] = array();				$TagQuery = "SELECT t.tag_id, t.tag from tags t";		$TagQuery .= " INNER JOIN curated_tag_pivot ctp ON t.tag_id = ctp.tag_id";		$TagQuery .= " WHERE ctp.Curated_ID = " . $Curated_ID;		$TagQuery .= " ORDER BY t.tag DESC";		$TagResult = mysql_query($TagQuery) or die('Query failed: ' . mysql_error());		  		while ($Tag = mysql_fetch_assoc($TagResult))			{			$thistag = $Tag['tag'];						$T = array();			$T = $thistag;			array_push($F['tags'], $T);			//echo $thistag . "<br />";				if($thistag=='Archive')				{				$archive = 1;					}								}							array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo stripslashes(format_json(json_encode($ReturnObject)));	});$route = '/curated/';	$app->post($route, function () use ($app){		$Add = 1;	$ReturnObject = array();	 	$request = $app->request();  	$param = $request->params();			if(isset($_POST['title'])){ $title = $param['title']; } else { $title = ''; }	if(isset($_POST['link'])){ $link = $param['link']; } else { $link = ''; }	if(isset($_POST['item_date'])){ $item_date = $param['item_date']; } else { $item_date = ''; }	if(isset($_POST['details'])){ $details = $param['details']; } else { $details = ''; }			if(isset($_POST['status'])){ $status = $param['status']; } else { $status = ''; }	if(isset($_POST['public_comment'])){ $public_comment = $param['public_comment']; } else { $public_comment = ''; }	if(isset($_POST['author'])){ $author = $param['author']; } else { $author = ''; }	if(isset($_POST['domain'])){ $domain = $param['domain']; } else { $domain = ''; }	if(isset($_POST['screenshot_url'])){ $screenshot_url = $param['screenshot_url']; } else { $screenshot_url = ''; }	if(isset($_POST['resolved_url'])){ $resolved_url = $param['resolved_url']; } else { $resolved_url = ''; }	if(isset($_POST['weekly_summary'])){ $weekly_summary = $param['weekly_summary']; } else { $weekly_summary = ''; }	if(isset($_POST['weekly_roundup'])){ $weekly_roundup = $param['weekly_roundup']; } else { $weekly_roundup = ''; }	if(isset($_POST['processed'])){ $processed = $param['processed']; } else { $processed = ''; }  	$Query = "SELECT * FROM curated WHERE link = '" . $link . "'";	//echo $Query . "<br />";	$Database = mysql_query($Query) or die('Query failed: ' . mysql_error());		if($Database && mysql_num_rows($Database))		{			$ThisItem = mysql_fetch_assoc($Database);			}	else 		{		$Query = "INSERT INTO curated(name,description,url,tags,slug) VALUES('" . mysql_real_escape_string($name) . "','" . mysql_real_escape_string($description) . "','" . mysql_real_escape_string($url) . "','" . mysql_real_escape_string($tags) . "','" . mysql_real_escape_string($curated_id) . "')";		//echo $query . "<br />";		mysql_query($Query) or die('Query failed: ' . mysql_error());					}	$F = array();	$F['name'] = $name;	$F['url'] = $url;	$F['tags'] = $tags;	$F['slug'] = $curated_id;		array_push($ReturnObject, $F);			$app->response()->header("Content-Type", "application/json");	echo stripslashes(format_json(json_encode($ReturnObject)));	});				$route = '/curated/byweek/';$app->get($route, function ()  use ($app){	$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();		if(isset($_REQUEST['week'])){ $week = $params['week']; } else { $week = date('W'); }	if(isset($_REQUEST['year'])){ $year = $params['year']; } else { $year = date('Y'); }				$Query = "SELECT * FROM curated WHERE WEEK(Item_Date) = " . $week . " AND YEAR(Item_Date) = " . $year;	$Query .= " ORDER BY Item_Date DESC, Title ASC";		//echo $Query . "<br />";		$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$Curated_ID = $Database['Curated_ID'];		$title = $Database['Title'];		$title = str_replace(chr(34),"",$title);		$title = str_replace(chr(39),"",$title);		$Link = $Database['Link'];		$Item_Date = $Database['Item_Date'];		$Original_Date = $Database['Original_Date'];		$Details = $Database['Details'];		$Details = strip_tags($Details);		$Details = str_replace(chr(34),"",$Details);		$Details = str_replace(chr(39),"",$Details);		$Details = str_replace(chr(9),"",$Details);		$Details = str_replace(chr(10),"",$Details);		$Details = str_replace(chr(11),"",$Details);		$Details = str_replace(chr(12),"",$Details);		$Details = str_replace(chr(13),"",$Details);		$Details = str_replace(chr(32).chr(32),chr(32),$Details);		$Details = str_replace(chr(32).chr(32),chr(32),$Details);		$Details = str_replace(chr(32).chr(32),chr(32),$Details);		$Status = $Database['Status'];		$Public_Comment = $Database['Public_Comment'];			$Public_Comment = str_replace(chr(34),"",$Public_Comment);		$Public_Comment = str_replace(chr(39),"",$Public_Comment);				$Author = $Database['Author'];				$Domain = $Database['Domain'];		$Screenshot_URL = $Database['Screenshot_URL'];		$Resolved_URL = $Database['Resolved_URL'];		$Weekly_Summary = $Database['Weekly_Summary'];		$Weekly_Roundup = $Database['Weekly_Roundup'];		$Processed = $Database['Processed'];		$Github_Build = $Database['Github_Build'];								// manipulation zone				$F = array();		$F['curated_id'] = $Curated_ID;		$F['title'] = $title;		$F['link'] = $Link;		$F['item_date'] = $Item_Date;		$F['original_date'] = $Original_Date;		//$F['details'] = $Details;		$F['status'] = $Status;		$F['public_comment'] = $Public_Comment;		$F['author'] = $Author;		$F['domain'] = $Domain;		$F['screenshot_url'] = $Screenshot_URL;		$F['resolved_url'] = $Resolved_URL;		$F['weekly_summary'] = $Weekly_Summary;		$F['weekly_roundup'] = $Weekly_Roundup;		$F['processed'] = $Processed;		$F['github_build'] = $Github_Build;				$F['tags'] = array();				$TagQuery = "SELECT t.tag_id, t.tag from tags t";		$TagQuery .= " INNER JOIN curated_tag_pivot ctp ON t.tag_id = ctp.tag_id";		$TagQuery .= " WHERE ctp.Curated_ID = " . $Curated_ID;		$TagQuery .= " ORDER BY t.tag DESC";		$TagResult = mysql_query($TagQuery) or die('Query failed: ' . mysql_error());		  		while ($Tag = mysql_fetch_assoc($TagResult))			{			$thistag = $Tag['tag'];						$T = array();			$T = $thistag;			array_push($F['tags'], $T);			//echo $thistag . "<br />";				if($thistag=='Archive')				{				$archive = 1;					}								}						array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo stripslashes(format_json(json_encode($ReturnObject)));	});		$route = '/curated/byweek/review/';$app->get($route, function ()  use ($app){	$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();		if(isset($_REQUEST['week'])){ $week = $params['week']; } else { $week = date('W'); }	if(isset($_REQUEST['year'])){ $year = $params['year']; } else { $year = date('Y'); }				$Query = "SELECT * FROM curated";	$Query .= " WHERE Status = 'Review' AND WEEK(Item_Date) = " . $week . " AND YEAR(Item_Date) = " . $year;	$Query .= " ORDER BY Item_Date DESC, Title ASC";		//echo $Query . "<br />";		$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$Curated_ID = $Database['Curated_ID'];		$title = $Database['Title'];		$Link = $Database['Link'];		$Item_Date = $Database['Item_Date'];		$Original_Date = $Database['Original_Date'];		$Details = $Database['Details'];		$Status = $Database['Status'];		$Public_Comment = $Database['Public_Comment'];			$Author = $Database['Author'];				$Domain = $Database['Domain'];		$Screenshot_URL = $Database['Screenshot_URL'];		$Resolved_URL = $Database['Resolved_URL'];		$Weekly_Summary = $Database['Weekly_Summary'];		$Weekly_Roundup = $Database['Weekly_Roundup'];		$Processed = $Database['Processed'];		$Github_Build = $Database['Github_Build'];						// manipulation zone				$F = array();		$F['curated_id'] = $Curated_ID;		$F['title'] = $title;		$F['link'] = $Link;		$F['item_date'] = $Item_Date;		$F['original_date'] = $Original_Date;		//$F['details'] = $Details;		$F['status'] = $Status;		$F['public_comment'] = $Public_Comment;		$F['author'] = $Author;		$F['domain'] = $Domain;		$F['screenshot_url'] = $Screenshot_URL;		$F['resolved_url'] = $Resolved_URL;		$F['weekly_summary'] = $Weekly_Summary;		$F['weekly_roundup'] = $Weekly_Roundup;		$F['processed'] = $Processed;		$F['github_build'] = $Github_Build;				$F['tags'] = array();				$TagQuery = "SELECT t.tag_id, t.tag from tags t";		$TagQuery .= " INNER JOIN curated_tag_pivot ctp ON t.tag_id = ctp.tag_id";		$TagQuery .= " WHERE ctp.Curated_ID = " . $Curated_ID;		$TagQuery .= " ORDER BY t.tag DESC";		$TagResult = mysql_query($TagQuery) or die('Query failed: ' . mysql_error());		  		while ($Tag = mysql_fetch_assoc($TagResult))			{			$thistag = $Tag['tag'];						$T = array();			$T = $thistag;			array_push($F['tags'], $T);			//echo $thistag . "<br />";				if($thistag=='Archive')				{				$archive = 1;					}								}						array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo stripslashes(format_json(json_encode($ReturnObject)));	});		$route = '/curated/byweek/published/';$app->get($route, function ()  use ($app){	$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();		if(isset($_REQUEST['week'])){ $week = $params['week']; } else { $week = date('W'); }	if(isset($_REQUEST['year'])){ $year = $params['year']; } else { $year = date('Y'); }				$Query = "SELECT * FROM curated";	$Query .= " WHERE Status = 'Published' AND WEEK(Item_Date) = " . $week . " AND YEAR(Item_Date) = " . $year;	$Query .= " ORDER BY Item_Date DESC, Title ASC";		//echo $Query . "<br />";		$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$Curated_ID = $Database['Curated_ID'];		$title = $Database['Title'];		$Link = $Database['Link'];		$Item_Date = $Database['Item_Date'];		$Original_Date = $Database['Original_Date'];		$Details = $Database['Details'];		$Status = $Database['Status'];		$Public_Comment = $Database['Public_Comment'];			$Author = $Database['Author'];				$Domain = $Database['Domain'];		$Screenshot_URL = $Database['Screenshot_URL'];		$Resolved_URL = $Database['Resolved_URL'];		$Weekly_Summary = $Database['Weekly_Summary'];		$Weekly_Roundup = $Database['Weekly_Roundup'];		$Processed = $Database['Processed'];		$Github_Build = $Database['Github_Build'];						// manipulation zone				$F = array();		$F['curated_id'] = $Curated_ID;		$F['title'] = $title;		$F['link'] = $Link;		$F['item_date'] = $Item_Date;		$F['original_date'] = $Original_Date;		//$F['details'] = $Details;		$F['status'] = $Status;		$F['public_comment'] = $Public_Comment;		$F['author'] = $Author;		$F['domain'] = $Domain;		$F['screenshot_url'] = $Screenshot_URL;		$F['resolved_url'] = $Resolved_URL;		$F['weekly_summary'] = $Weekly_Summary;		$F['weekly_roundup'] = $Weekly_Roundup;		$F['processed'] = $Processed;		$F['github_build'] = $Github_Build;				$F['tags'] = array();				$TagQuery = "SELECT t.tag_id, t.tag from tags t";		$TagQuery .= " INNER JOIN curated_tag_pivot ctp ON t.tag_id = ctp.tag_id";		$TagQuery .= " WHERE ctp.Curated_ID = " . $Curated_ID;		$TagQuery .= " ORDER BY t.tag DESC";		$TagResult = mysql_query($TagQuery) or die('Query failed: ' . mysql_error());		  		while ($Tag = mysql_fetch_assoc($TagResult))			{			$thistag = $Tag['tag'];						$T = array();			$T = $thistag;			array_push($F['tags'], $T);			//echo $thistag . "<br />";				if($thistag=='Archive')				{				$archive = 1;					}								}						array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo stripslashes(format_json(json_encode($ReturnObject)));	});		$route = '/curated/byweek/archive/';$app->get($route, function ()  use ($app){	$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();		if(isset($_REQUEST['week'])){ $week = $params['week']; } else { $week = date('W'); }	if(isset($_REQUEST['year'])){ $year = $params['year']; } else { $year = date('Y'); }				$Query = "SELECT * FROM curated";	$Query .= " WHERE Status = 'Archive' AND WEEK(Item_Date) = " . $week . " AND YEAR(Item_Date) = " . $year;	$Query .= " ORDER BY Item_Date DESC, Title ASC";		//echo $Query . "<br />";		$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$Curated_ID = $Database['Curated_ID'];		$title = $Database['Title'];		$Link = $Database['Link'];		$Item_Date = $Database['Item_Date'];		$Original_Date = $Database['Original_Date'];		$Details = $Database['Details'];		$Status = $Database['Status'];		$Public_Comment = $Database['Public_Comment'];			$Author = $Database['Author'];				$Domain = $Database['Domain'];		$Screenshot_URL = $Database['Screenshot_URL'];		$Resolved_URL = $Database['Resolved_URL'];		$Weekly_Summary = $Database['Weekly_Summary'];		$Weekly_Roundup = $Database['Weekly_Roundup'];		$Processed = $Database['Processed'];		$Github_Build = $Database['Github_Build'];						// manipulation zone				$F = array();		$F['curated_id'] = $Curated_ID;		$F['title'] = $title;		$F['link'] = $Link;		$F['item_date'] = $Item_Date;		$F['original_date'] = $Original_Date;		//$F['details'] = $Details;		$F['status'] = $Status;		$F['public_comment'] = $Public_Comment;		$F['author'] = $Author;		$F['domain'] = $Domain;		$F['screenshot_url'] = $Screenshot_URL;		$F['resolved_url'] = $Resolved_URL;		$F['weekly_summary'] = $Weekly_Summary;		$F['weekly_roundup'] = $Weekly_Roundup;		$F['processed'] = $Processed;		$F['github_build'] = $Github_Build;				$F['tags'] = array();				$TagQuery = "SELECT t.tag_id, t.tag from tags t";		$TagQuery .= " INNER JOIN curated_tag_pivot ctp ON t.tag_id = ctp.tag_id";		$TagQuery .= " WHERE ctp.Curated_ID = " . $Curated_ID;		$TagQuery .= " ORDER BY t.tag DESC";		$TagResult = mysql_query($TagQuery) or die('Query failed: ' . mysql_error());		  		while ($Tag = mysql_fetch_assoc($TagResult))			{			$thistag = $Tag['tag'];						$T = array();			$T = $thistag;			array_push($F['tags'], $T);			//echo $thistag . "<br />";				if($thistag=='Archive')				{				$archive = 1;					}								}						array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo stripslashes(format_json(json_encode($ReturnObject)));	});			$route = '/curated/tags/';$app->get($route, function ()  use ($app){	$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();		$Query = "SELECT t.Tag_ID, t.Tag, count(*) AS Curated_Count from tags t";	$Query .= " INNER JOIN curated_tag_pivot ctp ON t.Tag_ID = ctp.Tag_ID";	$Query .= " GROUP BY t.Tag ORDER BY count(*) DESC";	$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$tag_id = $Database['Tag_ID'];		$tag = $Database['Tag'];		$curated_count = $Database['Curated_Count'];		$F = array();		$F['tag_id'] = $tag_id;		$F['tag'] = $tag;		$F['curated_count'] = $curated_count;				array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo stripslashes(format_json(json_encode($ReturnObject)));	});		$route = '/curated/tags/:tag';$app->delete($route, function ($tag)  use ($app){	$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();		$Query = "SELECT t.Tag_ID, t.Tag FROM tags WHERE Tag = '" . trim(mysql_real_escape_string($tag)) . "'";	$TagResult = mysql_query($LinkQuery) or die('Query failed: ' . mysql_error());			if($TagResult && mysql_num_rows($TagResult))		{			$Tag = mysql_fetch_assoc($TagResult);		$Tag_ID = $Tag['Tag_ID'];		$Tag_Text = $Tag['Tag'];		$DeleteQuery = "DELETE FROM curated_tag_pivot WHERE Tag_ID = " . $Tag_ID;		$DeleteResult = mysql_query($DeleteQuery) or die('Query failed: ' . mysql_error());					$DeleteQuery = "DELETE FROM tags WHERE Tag = '" . trim(mysql_real_escape_string($tag)) . "'";		$DeleteResult = mysql_query($DeleteQuery) or die('Query failed: ' . mysql_error());					$F = array();		$F['tag_id'] = $Tag_ID;		$F['tag'] = $Tag_Text;		$F['curated_count'] = 0;				array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo stripslashes(format_json(json_encode($ReturnObject)));	});			$route = '/curated/tags/:tag/build/';$app->get($route, function ($tag)  use ($app){	$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();			$Query = "SELECT DISTINCT c.* from tags t";	$Query .= " JOIN curated_tag_pivot ctp ON t.Tag_ID = ctp.Tag_ID";	$Query .= " JOIN curated c ON ctp.Curated_ID = c.Curated_ID";	$Query .= " WHERE (Github_Build NOT LIKE '%" . $tag . "%' OR Github_Build IS NULL) AND Tag = '" . $tag . "' ORDER BY Item_date ASC LIMIT 5 ";	//echo $Query;	$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$Curated_ID = $Database['Curated_ID'];		$title = $Database['Title'];		$Link = $Database['Link'];		$Item_Date = $Database['Item_Date'];		$Original_Date = $Database['Original_Date'];		$Details = $Database['Details'];		$Status = $Database['Status'];		$Public_Comment = $Database['Public_Comment'];			$Author = $Database['Author'];				$Domain = $Database['Domain'];		$Screenshot_URL = $Database['Screenshot_URL'];		$Resolved_URL = $Database['Resolved_URL'];		$Weekly_Summary = $Database['Weekly_Summary'];		$Weekly_Roundup = $Database['Weekly_Roundup'];		$Processed = $Database['Processed'];		$Github_Build = $Database['Github_Build'];						// manipulation zone				$F = array();		$F['curated_id'] = $Curated_ID;		$F['title'] = $title;		$F['link'] = $Link;		$F['item_date'] = $Item_Date;		$F['original_date'] = $Original_Date;		//$F['details'] = $Details;		$F['status'] = $Status;		$F['public_comment'] = $Public_Comment;		$F['author'] = $Author;		$F['domain'] = $Domain;		$F['screenshot_url'] = $Screenshot_URL;		$F['resolved_url'] = $Resolved_URL;		$F['weekly_summary'] = $Weekly_Summary;		$F['weekly_roundup'] = $Weekly_Roundup;		$F['processed'] = $Processed;		$F['github_build'] = $Github_Build;				$F['tags'] = array();				$TagQuery = "SELECT t.tag_id, t.tag from tags t";		$TagQuery .= " INNER JOIN curated_tag_pivot ctp ON t.tag_id = ctp.tag_id";		$TagQuery .= " WHERE ctp.Curated_ID = " . $Curated_ID;		$TagQuery .= " ORDER BY t.tag DESC";		$TagResult = mysql_query($TagQuery) or die('Query failed: ' . mysql_error());		  		while ($Tag = mysql_fetch_assoc($TagResult))			{			$thistag = $Tag['tag'];						$T = array();			$T = $thistag;			array_push($F['tags'], $T);			//echo $thistag . "<br />";				if($thistag=='Archive')				{				$archive = 1;					}								}			if(strlen($Github_Build) > 1) 			{			$Github_Build .= "," . $tag;			}		else			{			$Github_Build .= $tag;			}		$UpdateQuery = "UPDATE curated SET Github_Build = '" . $Github_Build . "' WHERE Curated_ID = " . $Curated_ID;			$UpdateResult = mysql_query($UpdateQuery) or die('Query failed: ' . mysql_error());	  						array_push($ReturnObject, $F);						}		$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});				$route = '/curated/tags/byweek/';$app->get($route, function ()  use ($app){	$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();		 	$request = $app->request();  	$params = $request->params();		if(isset($_REQUEST['week'])){ $week = $params['week']; } else { $week = date('W'); }	if(isset($_REQUEST['year'])){ $year = $params['year']; } else { $year = date('Y'); }		$Query = "SELECT t.Tag_ID, t.Tag, count(*) AS Curated_Count from tags t";	$Query .= " JOIN curated_tag_pivot ctp ON t.Tag_ID = ctp.Tag_ID";	$Query .= " JOIN curated c ON ctp.Curated_ID = c.Curated_ID";	$Query .= " WHERE WEEK(c.Item_Date) = " . $week . " AND YEAR(c.Item_Date) = " . $year . " AND Tag <> ''";	$Query .= " GROUP BY t.Tag ORDER BY count(*) DESC";	$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$tag_id = $Database['Tag_ID'];		$tag = $Database['Tag'];		$curated_count = $Database['Curated_Count'];		$F = array();		$F['tag_id'] = $tag_id;		$F['tag'] = $tag;		$F['curated_count'] = $curated_count;				array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo stripslashes(format_json(json_encode($ReturnObject)));	});				$route = '/curated/tags/byweek/:tag/curated/';$app->get($route, function ($tag)  use ($app){	$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();			if(isset($_REQUEST['week'])){ $week = $params['week']; } else { $week = date('W'); }	if(isset($_REQUEST['year'])){ $year = $params['year']; } else { $year = date('Y'); }		$Query = "SELECT c.* from tags t";	$Query .= " JOIN curated_tag_pivot ctp ON t.Tag_ID = ctp.Tag_ID";	$Query .= " JOIN curated c ON ctp.Curated_ID = c.Curated_ID";	$Query .= " WHERE WEEK(c.Item_Date) = " . $week . " AND YEAR(c.Item_Date) = " . $year . " AND Tag = '" . $tag . "'";	$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$Curated_ID = $Database['Curated_ID'];		$title = $Database['Title'];		$Link = $Database['Link'];		$Item_Date = $Database['Item_Date'];		$Original_Date = $Database['Original_Date'];		$Details = $Database['Details'];		$Status = $Database['Status'];		$Public_Comment = $Database['Public_Comment'];			$Author = $Database['Author'];				$Domain = $Database['Domain'];		$Screenshot_URL = $Database['Screenshot_URL'];		$Resolved_URL = $Database['Resolved_URL'];		$Weekly_Summary = $Database['Weekly_Summary'];		$Weekly_Roundup = $Database['Weekly_Roundup'];		$Processed = $Database['Processed'];		$Github_Build = $Database['Github_Build'];						// manipulation zone				$F = array();		$F['curated_id'] = $Curated_ID;		$F['title'] = $title;		$F['link'] = $Link;		$F['item_date'] = $Item_Date;		$F['original_date'] = $Original_Date;		//$F['details'] = $Details;		$F['status'] = $Status;		$F['public_comment'] = $Public_Comment;		$F['author'] = $Author;		$F['domain'] = $Domain;		$F['screenshot_url'] = $Screenshot_URL;		$F['resolved_url'] = $Resolved_URL;		$F['weekly_summary'] = $Weekly_Summary;		$F['weekly_roundup'] = $Weekly_Roundup;		$F['processed'] = $Processed;		$F['github_build'] = $Github_Build;				$F['tags'] = array();				$TagQuery = "SELECT t.tag_id, t.tag from tags t";		$TagQuery .= " INNER JOIN curated_tag_pivot ctp ON t.tag_id = ctp.tag_id";		$TagQuery .= " WHERE ctp.Curated_ID = " . $Curated_ID;		$TagQuery .= " ORDER BY t.tag DESC";		$TagResult = mysql_query($TagQuery) or die('Query failed: ' . mysql_error());		  		while ($Tag = mysql_fetch_assoc($TagResult))			{			$thistag = $Tag['tag'];						$T = array();			$T = $thistag;			array_push($F['tags'], $T);			//echo $thistag . "<br />";				if($thistag=='Archive')				{				$archive = 1;					}								}						array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo stripslashes(format_json(json_encode($ReturnObject)));	});											$route = '/curated/:curated_id/';$app->get($route, function ($curated_ID)  use ($app){	$ReturnObject = array();			$Query = "SELECT * FROM curated WHERE Curated_ID = '" . $curated_ID . "'";	//echo $Query . "<br />";		$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$Curated_ID = $Database['Curated_ID'];		$title = $Database['Title'];		$Link = $Database['Link'];		$Item_Date = $Database['Item_Date'];		$Original_Date = $Database['Original_Date'];		$Details = $Database['Details'];		$Status = $Database['Status'];		$Public_Comment = $Database['Public_Comment'];			$Author = $Database['Author'];				$Domain = $Database['Domain'];		$Screenshot_URL = $Database['Screenshot_URL'];		$Resolved_URL = $Database['Resolved_URL'];		$Weekly_Summary = $Database['Weekly_Summary'];		$Weekly_Roundup = $Database['Weekly_Roundup'];		$Processed = $Database['Processed'];		$Github_Build = $Database['Github_Build'];						// manipulation zone				$F = array();		$F['curated_id'] = $Curated_ID;		$F['title'] = $title;		$F['link'] = $Link;		$F['item_date'] = $Item_Date;		$F['original_date'] = $Original_Date;		//$F['details'] = $Details;		$F['status'] = $Status;		$F['public_comment'] = $Public_Comment;		$F['author'] = $Author;		$F['domain'] = $Domain;		$F['screenshot_url'] = $Screenshot_URL;		$F['resolved_url'] = $Resolved_URL;		$F['weekly_summary'] = $Weekly_Summary;		$F['weekly_roundup'] = $Weekly_Roundup;		$F['processed'] = $Processed;		$F['github_build'] = $Github_Build;				$F['tags'] = array();				$TagQuery = "SELECT t.tag_id, t.tag from tags t";		$TagQuery .= " INNER JOIN curated_tag_pivot ctp ON t.tag_id = ctp.tag_id";		$TagQuery .= " WHERE ctp.Curated_ID = " . $Curated_ID;		$TagQuery .= " ORDER BY t.tag DESC";		$TagResult = mysql_query($TagQuery) or die('Query failed: ' . mysql_error());		  		while ($Tag = mysql_fetch_assoc($TagResult))			{			$thistag = $Tag['tag'];						$T = array();			$T = $thistag;			array_push($F['tags'], $T);			//echo $thistag . "<br />";				if($thistag=='Archive')				{				$archive = 1;					}								}						array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo stripslashes(format_json(json_encode($ReturnObject)));	});		$route = '/curated/:curated_id/';	$app->put($route, function ($curated_id) use ($app){			$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();				if(isset($params['title'])){ $title = $params['title']; } else { $title = ''; }	if(isset($params['link'])){ $link = $params['link']; } else { $link = ''; }	if(isset($params['item_date'])){ $item_date = $params['item_date']; } else { $item_date = ''; }	if(isset($params['details'])){ $details = $params['details']; } else { $details = ''; }			if(isset($params['status'])){ $status = $params['status']; } else { $status = ''; }	if(isset($params['public_comment'])){ $public_comment = $params['public_comment']; } else { $public_comment = ''; }	if(isset($params['author'])){ $author = $param['author']; } else { $author = ''; }	if(isset($params['domain'])){ $domain = $params['domain']; } else { $domain = ''; }	if(isset($params['screenshot_url'])){ $screenshot_url = $params['screenshot_url']; } else { $screenshot_url = ''; }	if(isset($params['resolved_url'])){ $resolved_url = $params['resolved_url']; } else { $resolved_url = ''; }	if(isset($params['weekly_summary'])){ $weekly_summary = $params['weekly_summary']; } else { $weekly_summary = ''; }	if(isset($params['weekly_roundup'])){ $weekly_roundup = $params['weekly_roundup']; } else { $weekly_roundup = ''; }	if(isset($params['processed'])){ $processed = $params['processed']; } else { $processed = ''; }	if(isset($params['github_build'])){ $github_build = $params['github_build']; } else { $github_build = ''; }	  	$Query = "SELECT * FROM curated WHERE Curated_ID = " . $curated_id;	//echo $Query . "<br />";	$Database = mysql_query($Query) or die('Query failed: ' . mysql_error());		if($Database && mysql_num_rows($Database))		{			$query = "UPDATE curated SET";		$query .= " Flag = 1";				if($title!='') { $query .= ", Title = '" . mysql_real_escape_string($title) . "'"; }		if($link!='') { $query .= ", Link = '" . mysql_real_escape_string($link) . "'"; }		if($details!='') { $query .= ", Details = '" . mysql_real_escape_string($details) . "'"; }		if($author!='') { $query .= ", Author = '" . mysql_real_escape_string($author) . "'"; }		if($screenshot_url!='') { $query .= ", Screenshot_URL = '" . mysql_real_escape_string($screenshot_url) . "'"; }		if($github_build!='') { $query .= ", Github_Build = '" . mysql_real_escape_string($github_build) . "'"; }				$query .= " WHERE Curated_ID = " . $curated_id;				//echo $query . "<br />";		mysql_query($query) or die('Query failed: ' . mysql_error());			}	$ReturnObject['curated_id'] = $curated_id;			$app->response()->header("Content-Type", "application/json");	echo stripslashes(format_json(json_encode($ReturnObject)));	});	$route = '/curated/:curated_id/';	$app->delete($route, function ($curated_id) use ($app){		$Add = 1;	$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();		$query = "DELETE FROM blog WHERE slug = '" . $curated_id . "'";	//echo $query . "<br />";	mysql_query($query) or die('Query failed: ' . mysql_error());		});		$route = '/curated/:curated_id/tags/';$app->get($route, function ($curated_ID)  use ($app){	$ReturnObject = array();			$Query = "SELECT t.Tag_ID, t.Tag, count(*) AS Curated_Count from tags t";	$Query .= " JOIN curated_tag_pivot ctp ON t.Tag_ID = ctp.Tag_ID";	$Query .= " WHERE ctp.Curated_ID = " . $curated_ID;	$Query .= " GROUP BY t.Tag ORDER BY count(*) DESC";	$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$tag_id = $Database['Tag_ID'];		$tag = $Database['Tag'];		$curated_count = $Database['Curated_Count'];		$F = array();		$F['tag_id'] = $tag_id;		$F['tag'] = $tag;		$F['curated_count'] = $curated_count;				array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo stripslashes(format_json(json_encode($ReturnObject)));	});			$route = '/curated/:curated_id/tags/';$app->post($route, function ($Curated_ID)  use ($app){	$ReturnObject = array();		 	$request = $app->request();  	$param = $request->params();			if(isset($param['tag']))		{		$tag = trim(mysql_real_escape_string($param['tag']));					$CheckTagQuery = "SELECT Tag_ID FROM tags where Tag = '" . $tag . "'";		$CheckTagResults = mysql_query($CheckTagQuery) or die('Query failed: ' . mysql_error());				if($CheckTagResults && mysql_num_rows($CheckTagResults))			{			$Tag = mysql_fetch_assoc($CheckTagResults);					$Tag_ID = $Tag['Tag_ID'];			}		else			{			$query = "INSERT INTO tags(Tag) VALUES('" . trim($_POST['Tag']) . "'); ";			mysql_query($query) or die('Query failed: ' . mysql_error());				$Tag_ID = mysql_insert_id();						}		$CheckTagPivotQuery = "SELECT * FROM curated_tag_pivot where Tag_ID = " . trim($Tag_ID) . " AND Curated_ID = " . trim($Curated_ID);		$CheckTagPivotResult = mysql_query($CheckTagPivotQuery) or die('Query failed: ' . mysql_error());				if($CheckTagPivotResult && mysql_num_rows($CheckTagPivotResult))			{			$CheckTagPivot = mysql_fetch_assoc($CheckTagPivotResult);					}		else			{			$query = "INSERT INTO curated_tag_pivot(Tag_ID,Curated_ID) VALUES(" . $Tag_ID . "," . $Curated_ID . "); ";			mysql_query($query) or die('Query failed: ' . mysql_error());								}		$F = array();		$F['tag_id'] = $Tag_ID;		$F['tag'] = $tag;		$F['curated_count'] = 0;				array_push($ReturnObject, $F);		}				$app->response()->header("Content-Type", "application/json");		echo stripslashes(format_json(json_encode($ReturnObject)));	});		$route = '/curated/:curated_id/tags/:tag';$app->delete($route, function ($Curated_ID,$Tag)  use ($app){	$ReturnObject = array();		 	$request = $app->request();  	$param = $request->params();			if(isset($param['tag']))		{		$tag = trim(mysql_real_escape_string($param['tag']));					$CheckTagQuery = "SELECT Tag_ID FROM tags where Tag = '" . $tag . "'";		$CheckTagResults = mysql_query($CheckTagQuery) or die('Query failed: ' . mysql_error());				if($CheckTagResults && mysql_num_rows($CheckTagResults))			{			$Tag = mysql_fetch_assoc($CheckTagResults);					$Tag_ID = $Tag['Tag_ID'];			$DeleteQuery = "DELETE FROM curated_tag_pivot where Tag_ID = " . trim($Tag_ID) . " AND Curated_ID = " . trim($Curated_ID);			$DeleteResult = mysql_query($DeleteQuery) or die('Query failed: ' . mysql_error());			}		$F = array();		$F['tag_id'] = $Tag_ID;		$F['tag'] = $tag;		$F['curated_count'] = 0;				array_push($ReturnObject, $F);		}				$app->response()->header("Content-Type", "application/json");		echo stripslashes(format_json(json_encode($ReturnObject)));	});								$route = '/curated/:curated_id/notes/';$app->get($route, function ($curated_ID)  use ($app){	$ReturnObject = array();			$Query = "SELECT ID,Curate_ID,Type,Note  from curated_notes cn";	$Query .= " WHERE cn.Curated_ID = " . $curated_ID;	$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$Note_ID = $Database['ID'];		$Type = $Database['Type'];		$Note = $Database['Note'];		$F = array();		$F['note_id'] = $Note_ID;		$F['type'] = $Type;		$F['note'] = $Note;				array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo stripslashes(format_json(json_encode($ReturnObject)));	});			$route = '/curated/:curated_id/notes/';$app->post($route, function ($Curated_ID)  use ($app){	$ReturnObject = array();		 	$request = $app->request();  	$param = $request->params();			if(isset($param['Type']) && isset($param['Note']))		{		$Type = trim(mysql_real_escape_string($param['Type']));		$Note = trim(mysql_real_escape_string($param['Note']));		$query = "INSERT INTO curated_notes(Curated_ID,Type,Note) VALUES(" . $Curated_ID . "," . $Type . "," . $Note . "); ";		mysql_query($query) or die('Query failed: ' . mysql_error());							$Note_ID = mysql_insert_id();							$F = array();		$F['note_id'] = $Note_ID;		$F['type'] = $Type;		$F['note'] = $Note;				array_push($ReturnObject, $F);		}				$app->response()->header("Content-Type", "application/json");		echo stripslashes(format_json(json_encode($ReturnObject)));	});		$route = '/curated/:curated_id/notes/:note_id';$app->delete($route, function ($Curated_ID,$Note_ID)  use ($app){	$ReturnObject = array();		 	$request = $app->request();  	$param = $request->params();		$DeleteQuery = "DELETE FROM curated_note WHERE ID = " . trim($Note_ID) . " AND Curated_ID = " . trim($Curated_ID);	$DeleteResult = mysql_query($DeleteQuery) or die('Query failed: ' . mysql_error());	$F = array();	$F['note_id'] = $Note_ID;	$F['type'] = '';	$F['note'] = '';		array_push($ReturnObject, $F);		$app->response()->header("Content-Type", "application/json");	echo stripslashes(format_json(json_encode($ReturnObject)));		});				?>